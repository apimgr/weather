{
  "permissions": {
    "allow": [
      "Bash(curl:*)",
      "Bash(npm install)",
      "Bash(timeout:*)",
      "Bash(npm run download-data:*)",
      "Bash(pkill:*)",
      "Bash(PORT=3007 npm start)",
      "Bash(PORT=3008 npm start)",
      "WebFetch(domain:mb.pste.us)",
      "Read(//tmp/**)",
      "Bash(netstat:*)",
      "WebFetch(domain:wthr.top)",
      "Bash(git add:*)",
      "Bash(PORT=3020 npm start)",
      "Bash(PORT=3030 npm start)",
      "Bash(PORT=3040 npm start)",
      "Bash(PORT=3041 npm start)",
      "Bash(PORT=3042 npm start)",
      "Bash(PORT=3050 npm start)",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "Bash(PORT=3051 npm start)",
      "Bash(go get:*)",
      "Bash(go mod:*)",
      "Bash(go build:*)",
      "Bash(find:*)",
      "Bash(CGO_ENABLED=0 go build -ldflags=\"-s -w\" -o weather_optimized main_new.go)",
      "Bash(kill:*)",
      "Bash(chmod:*)",
      "Bash(tree:*)",
      "Bash(CGO_ENABLED=0 go build -ldflags=\"-s -w\" -o weather main.go)",
      "Bash(PORT=3001 ./weather)",
      "Bash(awk:*)",
      "Bash(xargs:*)",
      "Bash(killall:*)",
      "Bash(bash:*)",
      "Bash(git log:*)",
      "Bash(gh workflow:*)",
      "Bash(/usr/bin/gh:*)",
      "Bash(~/.local/bin/gh:*)",
      "Bash(~/bin/gh:*)",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(wget:*)",
      "WebFetch(domain:wttr.in)",
      "Bash(export CGO_ENABLED=0)",
      "WebSearch",
      "WebFetch(domain:open-meteo.com)",
      "WebFetch(domain:www.weather.gov)",
      "WebFetch(domain:earthquake.usgs.gov)",
      "Bash(export PORT=3001)",
      "Read(//root/Pictures/**)",
      "Bash(env CGO_ENABLED=0 go build -ldflags=\"-s -w\" -o weather main.go)",
      "Bash(PORT=3050 ./weather)",
      "Bash(env PORT=3050 timeout 5 ./weather)",
      "Bash(env PORT=3050 timeout 8 ./weather)",
      "Bash(sqlite3:*)",
      "Bash(env PORT=3050 timeout 10 ./weather)",
      "Bash(./weather --version)",
      "Bash(./weather:*)",
      "Bash(env CGO_ENABLED=0 go build -ldflags=\"-s -w -X main.Version=3.0.0 -X main.BuildDate=2024-10-02\" -o weather main.go)",
      "Bash(jq -r '.status + \"\"\"\" - \"\"\"\" + (.ready|tostring)' curl -s \"http://localhost:3333/api/weather?location=London\")",
      "Bash(grep:*)",
      "Bash(for dir in public routes views share renderers services utils models)",
      "Bash(do echo \"=== src/$dir ===\" ls -1 src/$dir)",
      "Bash({} +)",
      "Bash(src/handlers/hurricane.go)",
      "Bash(env CGO_ENABLED=0 go build -ldflags=\"-s -w -X main.Version=3.0.0\" -o weather main.go)",
      "Read(//var/lib/weather-test/**)",
      "Bash(make:*)",
      "Bash(PORT=3050 timeout 10 ./weather)",
      "Bash(env:*)",
      "Bash(/tmp/test_notification_delivery.sh:*)",
      "Bash(docker build:*)",
      "Bash(docker rm:*)",
      "Bash(docker run:*)",
      "Bash(docker logs:*)",
      "Bash(for endpoint in \"/web\" \"/moon\" \"/earthquake\" \"/hurricane\" \"/docs\" \"/api\")",
      "Bash(do)",
      "Bash(done)",
      "Bash(pgrep:*)",
      "Bash(for file in earthquake.html api-docs.html earthquake_detail.html)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(go test:*)",
      "Bash(go run:*)",
      "Read(//var/log/weather/**)",
      "Bash(docker exec:*)",
      "Bash(docker restart:*)",
      "Bash(docker volume rm:*)",
      "Bash(/tmp/test_admin_pages.sh:*)",
      "Bash(/tmp/test_admin_v2.sh:*)",
      "Bash(tee:*)",
      "Bash(/tmp/test_admin_final.sh:*)",
      "Bash(/tmp/simple_admin_test.sh:*)",
      "Bash(/tmp/final_admin_report.sh:*)",
      "Bash(for page in \"\" \"/users\" \"/settings\" \"/tokens\" \"/logs\" \"/tasks\" \"/backup\" \"/channels\" \"/templates\")",
      "Bash(do echo -n \"Testing /admin$page: \")",
      "Bash(CGO_ENABLED=0 go build -o /tmp/weather-test ./src)",
      "Bash(CGO_ENABLED=0 go build -ldflags=\"-s -w\" -o weather .)",
      "Bash(CGO_ENABLED=0 go build -ldflags=\"-s -w\" -o ../weather .)",
      "Bash(ss:*)",
      "Read(//proc/2697226/**)",
      "Bash(rm:*)",
      "Bash(go:*)",
      "Bash(./tests/run-tests.sh:*)",
      "Bash(sudo -u nobody go run:*)",
      "Bash(git checkout:*)",
      "Bash(sed:*)",
      "Bash(GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build:*)",
      "WebFetch(domain:github.com)",
      "Read(//root/Projects/github/apimgr/**)",
      "Bash(test:*)",
      "Bash(docker compose:*)",
      "Bash(docker images:*)",
      "Bash(for i in {1..5})",
      "Bash(do curl -s -o /dev/null -w \"Request $i: HTTP %{http_code}, Rate-Limit-Remaining: %{header_json}\\n\" -I \"http://localhost:64181/api/health\")",
      "Bash(time curl -s http://localhost:64182/healthz)",
      "Bash(docker stop:*)",
      "Bash(incus list:*)",
      "Bash(CGO_ENABLED=0 go build:*)",
      "Bash(incus launch:*)",
      "Bash(incus file push:*)",
      "Bash(incus exec:*)",
      "Bash(incus delete:*)",
      "Bash(for endpoint in routes config memory db)",
      "Bash(do echo -n \"  /debug/$endpoint: \")"
    ],
    "deny": [],
    "ask": []
  }
}
